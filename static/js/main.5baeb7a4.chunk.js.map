{"version":3,"sources":["redux/actions.js","Component/ContactForm/ContactForm.styled.js","Component/ContactForm/ContactForm.jsx","Component/Filter/Filter.jsx","Component/ContactList/ContactList.styled.js","Component/ContactList/ContactList.jsx","Component/App/App.styled.js","Component/App/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","filterContact","Label","styled","label","Button","button","Input","input","connect","dispatch","propSubmit","value","actions","items","useState","setName","setNumber","nameInputId","numberInputId","handleChange","event","currentTarget","onSubmit","preventDefault","htmlFor","placeholder","type","pattern","title","required","onChange","Filter","state","contacts","filter","propeTypes","PropTypes","string","func","List","ul","ListItem","li","ContactList","onDelete","map","onClick","getVisibleList","allContacts","normalisedFilter","toLowerCase","includes","array","Container","div","Title","h1","App","reducer","createReducer","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","persistedReducer","persistReducer","store","configureStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5baeb7a4.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('add/Contact', data => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('delete/Contact');\r\n\r\nexport const filterContact = createAction('changeFilter/Contact');\r\n\r\n// redux\r\n\r\n// export const filterContact = value => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const addContact = data => ({\r\n//   type: ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 100px;\n  height: 25px;\n  color: #7b3f3f;\n`;\nexport const Input = styled.input`\n  margin: 0;\n`;\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport * as actions from \"../../redux/actions\";\r\nimport { Label, Button, Input } from './ContactForm.styled';\r\n\r\n function ContactForm({items, propSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    const resetForm = () => {\r\n      setName('');\r\n      setNumber('');\r\n    };\r\n\r\n    event.preventDefault();\r\n    propSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Label htmlFor={nameInputId}>\r\n          Name\r\n          <Input\r\n            placeholder=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={nameInputId}\r\n          />\r\n        </Label>\r\n        <Label htmlFor={numberInputId}>\r\n          Number\r\n          <Input\r\n            placeholder=\"number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            id={numberInputId}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n  propSubmit: value => dispatch(actions.addContact(value)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  propSubmit: PropTypes.func,\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions'\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (event) => dispatch(actions.filterContact(event.currentTarget.value))\n    \n  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propeTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 5px;\n  padding: 5px 10px;\n  color: #f71c0c;\n  border: 1px solid #723a3a;\n  border-radius: 5px;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../redux/actions\";\r\nimport { List, ListItem, Button } from './ContactList.styled';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ListItem key={id}>\r\n          {name}: {number}\r\n          <Button onClick={() => onDelete(id)}>delete</Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nconst getVisibleList = (allContacts, filter) => {\r\n  const normalisedFilter = filter.toLowerCase();\r\n  \r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalisedFilter),\r\n   );\r\n  };\r\n\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter }}) => ({\r\n  contacts: getVisibleList(contacts, filter),\r\n  \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: (value) => dispatch(actions.deleteContact(value))\r\n });\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n\r\n\r\nContactList.propeTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px 20px;\n  width: 400px;\n\n  text-align: center;\n  justify-content: center;\n  border-radius: 10px;\n  border: 3px solid #ce6a6a;\n  background-color: #ec9f9f;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n`;\n","import ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { Container, Title } from './App.styled';\n\nexport default function App() {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst reducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: reducer,\r\n  filter,\r\n});\r\n\r\n// redux\r\n\r\n// const reducer = (state = [], { type, payload }) => {\r\n//   // console.log(payload);\r\n//   // console.log('log: ', payload);\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   contacts: reducer,\r\n//   filter,\r\n// });\r\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport reducer from './reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst rootReducer = combineReducers({ contacts: reducer });\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n\n// redux\n//  const rootReducer = combineReducers({\n//   contacts: reducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App/App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}