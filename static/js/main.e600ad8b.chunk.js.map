{"version":3,"sources":["redux/types.js","Component/ContactForm/ContactForm.styled.js","Component/ContactForm/ContactForm.jsx","redux/actions.js","Component/Filter/Filter.jsx","Component/ContactList/ContactList.styled.js","Component/ContactList/ContactList.jsx","Component/App/App.styled.js","Component/App/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD","DELETE","FILTER","Label","styled","label","Button","button","Input","input","connect","dispatch","propSubmit","value","data","type","payload","id","uuidv4","name","number","items","useState","setName","setNumber","nameInputId","numberInputId","handleChange","event","currentTarget","onSubmit","preventDefault","htmlFor","placeholder","pattern","title","required","onChange","Filter","state","contacts","filter","propeTypes","PropTypes","string","func","List","ul","ListItem","li","ContactList","onDelete","map","onClick","getVisibleList","allContacts","normalisedFilter","toLowerCase","includes","array","Container","div","Title","h1","App","combineReducers","rootReducer","reducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","console","log","getState"],"mappings":"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","file":"static/js/main.e600ad8b.chunk.js","sourcesContent":["export const ADD = 'add/Contact';\nexport const DELETE = 'delete/Contact';\nexport const FILTER = 'changeFilter/Contact';\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 100px;\n  height: 25px;\n  color: #7b3f3f;\n`;\nexport const Input = styled.input`\n  margin: 0;\n`;\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport * as actions from \"../../redux/actions\";\r\nimport { Label, Button, Input } from './ContactForm.styled';\r\n\r\n function ContactForm({items, propSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    const resetForm = () => {\r\n      setName('');\r\n      setNumber('');\r\n    };\r\n\r\n    event.preventDefault();\r\n    propSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Label htmlFor={nameInputId}>\r\n          Name\r\n          <Input\r\n            placeholder=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            id={nameInputId}\r\n          />\r\n        </Label>\r\n        <Label htmlFor={numberInputId}>\r\n          Number\r\n          <Input\r\n            placeholder=\"number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            id={numberInputId}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n }\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n  propSubmit: value => dispatch(actions.addContact(value)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  propSubmit: PropTypes.func,\r\n};","import { ADD, DELETE, FILTER } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = data => ({\n  type: ADD,\n  payload: {\n    id: uuidv4(),\n    name: data.name,\n    number: data.number,\n  },\n});\n\nexport const deleteContact = contactId => ({\n  type: DELETE,\n  payload: contactId,\n});\n\nexport const filterContact = value => ({\n  type: FILTER,\n  payload: value,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions'\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (event) => dispatch(actions.filterContact(event.currentTarget.value))\n    \n  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propeTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 5px;\n  padding: 5px 10px;\n  color: #f71c0c;\n  border: 1px solid #723a3a;\n  border-radius: 5px;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../redux/actions\";\r\nimport { List, ListItem, Button } from './ContactList.styled';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ListItem key={id}>\r\n          {name}: {number}\r\n          <Button onClick={() => onDelete(id)}>delete</Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nconst getVisibleList = (allContacts, filter) => {\r\n  const normalisedFilter = filter.toLowerCase();\r\n  \r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalisedFilter),\r\n   );\r\n  };\r\n\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter }}) => ({\r\n  contacts: getVisibleList(contacts, filter),\r\n  \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: (value) => dispatch(actions.deleteContact(value))\r\n });\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n\r\n\r\nContactList.propeTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px 20px;\n  width: 400px;\n\n  text-align: center;\n  justify-content: center;\n  border-radius: 10px;\n  border: 3px solid #ce6a6a;\n  background-color: #ec9f9f;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n`;\n","import ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { Container, Title } from './App.styled';\n\nexport default function App() {\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p>Find contacts by name</p>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { ADD, DELETE, FILTER } from './types';\n\nconst reducer = (state = [], { type, payload }) => {\n  // console.log(payload);\n  // console.log('log: ', payload);\n  switch (type) {\n    case ADD:\n      return [...state, payload];\n    case DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contacts: reducer,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import { addContact } from './actions';\nimport reducer from './reducer';\n// const initialState = {\n//   contacts: '',\n// };\n\nconst rootReducer = combineReducers({\n  contacts: reducer,\n});\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App/App';\nimport store from './redux/store';\n// import { myAction, myAction2 } from './redux/actions';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nconsole.log(store);\nconsole.log(store.getState());\n"],"sourceRoot":""}